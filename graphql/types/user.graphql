type Query {
  getUser(id: ID, uid: String): User
}

type User {
  id: ID!
  status: Status!
  uid: String!
  avatar: String!
  full_name: String!
  email: String!
  gender: Gender!
  birth_date: String!
  location: String!
  biography: String
  match_gender: Gender!
  device_brand: String!
  device_model: String!
  device_os_version: String!
  app_version: String!
  last_active_at: String!
  created_at: String
  updated_at: String
}

type Mutation {
  register(data: RegisterInput!): User!
  updateUser(data: UpdateUserInput!): User!
  deleteUser(id: ID!): Boolean!
}

input RegisterInput {
  uid: String!
  avatar: String!
  full_name: String!
  email: String!
  gender: Gender!
  birth_date: String!
  location: String!
  biography: String
  match_gender: Gender!
  device_brand: String!
  device_model: String!
  device_os_version: String!
  app_version: String!
  last_active_at: String!
}

input UpdateUserInput {
  id: ID!
  avatar: String
  full_name: String
  gender: Gender
  location: String
  biography: String
  device_brand: String
  device_model: String
  device_os_version: String
  app_version: String
  last_active_at: String
}

enum Gender {
  everyone
  male
  female
  other
}

enum Status {
  online
  offline
}
